#
# Win64 cross-compile Makefile for q2tools
#


# BUILD = RELEASE or DEBUG
BUILD ?= RELEASE

# Where programs will be installed on 'make install'
INSTALL_DIR ?= ./install

# Compiler

CPU=x86_64
SYS=Win64

CC=x86_64-w64-mingw32-gcc
STRIP=x86_64-w64-mingw32-strip

# Compile Options
WITH_PTHREAD ?= -pthread -DUSE_PTHREADS
WITHOUT_PTHREAD ?= -DUSE_SETRLIMIT
# THREADING_OPTION = WITH_PTHREAD or WITHOUT_PTHREAD
THREADING_OPTION ?= $(WITH_PTHREAD)
BASE_CFLAGS ?= -fno-common -Wall -Wno-unused-result -Wno-strict-aliasing $(THREADING_OPTION) -DUSE_ZLIB -Wl,--stack,16777216
RELEASE_CFLAGS ?= $(BASE_CFLAGS) -O3 
DEBUG_CFLAGS ?= $(BASE_CFLAGS) -O0 -g -ggdb

# Link Options
LDFLAGS ?= -lm -lz

srcdir = .
includedirs = -Icommon

# source locations
vpath %.h map2
vpath %.c map2
vpath %.h data2
vpath %.c data2
vpath %.h common
vpath %.c common

ifeq ($(BUILD),DEBUG)
CFLAGS ?= $(DEBUG_CFLAGS) $(INCLUDES)
builddir = debugWin64
vpath %.o debugWin64
else
CFLAGS ?= $(RELEASE_CFLAGS) $(INCLUDES)
builddir = releaseWin64
vpath %.o releaseWin64
endif

# common files 
cmn_srcs = \
	bspfile.c	\
	cmdlib.c	\
	l3dslib.c	\
	llwolib.o	\
	lbmlib.c	\
	mathlib.c	\
	mdfour.c	\
	polylib.c	\
	scriplib.c	\
	trilib.c	\
	threads.c

cmn_objs = $(cmn_srcs:.c=.o)


#
# files for data2
#
data_srcs =		\
	images.c	\
	models.c	\
	data2.c		\
	sprites.c	\
	tables.c	\
	video.c

data_cmnobjs =	\
	bspfile.o	\
	cmdlib.o	\
	lbmlib.o	\
	l3dslib.o	\
	llwolib.o	\
	mathlib.o	\
	mdfour.o	\
	polylib.o	\
	scriplib.o	\
	trilib.o	\
	threads.o

data_objs = $(data_srcs:.c=.o)
data_objs_all = $(data_objs) $(data_cmnobjs)


#
# files for merged tool map2
#
map2_srcs =		\
	main.c		\
	rad.c		\
	lightmap.c	\
	patches.c 	\
	trace.c		\
	bsp.c 	    \
	brushbsp.c	\
	faces.c		\
	leakfile.c	\
	map.c		\
	portals.c	\
	prtfile.c	\
	textures.c	\
	tree.c		\
	writebsp.c	\
	csg.c		\
	vis.c 		\
	flow.c 		\

map2_cmnobjs = 	\
	bspfile.o	\
	cmdlib.o	\
	l3dslib.o	\
	llwolib.o	\
	lbmlib.o	\
	mathlib.o	\
	mdfour.o	\
	polylib.o	\
	scriplib.o	\
	trilib.o	\
	threads.o 	

	
map2_objs = $(map2_srcs:.c=.o)
map2_objs_all = $(map2_objs) $(map2_cmnobjs)

#
# --- targets ---
#

all: subdirectories $(builddir)/data2 $(builddir)/map2


# compile common sources
$(cmn_objs): %o : %c
	$(CC) -c $(includedirs) $(CFLAGS) $< -o $(builddir)/$@


# link data2
$(builddir)/data2: $(data_objs_all)
	$(CC) $(CFLAGS) $(addprefix $(builddir)/, $(data_objs_all)) -o $(builddir)/data2.exe $(LDFLAGS)

# compile data2 sources
$(data_objs): %o : %c
	$(CC) -c $(includedirs) $(CFLAGS) $< -o $(builddir)/$@

# link map2
$(builddir)/map2: $(map2_objs_all)
	$(CC) $(CFLAGS) $(addprefix $(builddir)/, $(map2_objs_all)) -o $(builddir)/map2.exe $(LDFLAGS)

# compile map2 sources
$(map2_objs): %o : %c
	$(CC) -c $(includedirs) $(CFLAGS) $< -o $(builddir)/$@

subdirectories:
	mkdir -p $(builddir)

clean:
	rm -f $(builddir)/*.o
	rm -f $(builddir)/data2.exe
	rm -f $(builddir)/map2.exe

# Add these to remove executables from install directory

#	rm -f $(INSTALL_DIR)/data2.exe
#	rm -f $(INSTALL_DIR)/map2.exe

install:
	mkdir -p $(INSTALL_DIR)
	cp $(builddir)/data2.exe   $(INSTALL_DIR)
	cp $(builddir)/map2.exe $(INSTALL_DIR)
